<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwIDAwMCAwMDAgMDAwIDAwMCAwMDAgMDAwIDAw
        MCAwMDAgMDAwIDAwMCAwMDAgMDAwIDAwMCAwMDAgMDAwIDAwMCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwIDMzM78zMzP/MzMz/zMzM/8zMzP/MzMz/zMz
        M/8zMzP/MzMz/zMzM/8zMzP/MzMz/zMzM/8zMzP/MzMz/zMzM/8zMzP/MzMz/zMzM/8zMzPfNDQ0QAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIyMmAzMzP/MzMz3zMzM58yMjJgMjIyYDIy
        MmAyMjJgMjIyYDIyMmAyMjJgMjIyYDIyMmAyMjJgMjIyYDIyMmAyMjJgMjIyYDIyMmAyMjJgMjIyfzMz
        M/8zMzP/NDQ0QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAgMzMz3zMzM98AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAMDAwIDMzM78zMzP/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQ0NEAzMzP/NDQ0QAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAMjIyYDMzM/8yMjJgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjIyfzMz
        M/8wMDAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAgMzMz/zIyMmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAyMjJ/MzMz/zAwMCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMCAzMzP/MjIyfwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADIyMn8zMzP/MDAwIAAAAAAyMjJgMzMz3zAwMCAwMDAgMzMznzMzM58zMzOfMzMznzMz
        M58zMzOfMzMznzMzM58zMzOfMzMznzMzM580NDRAAAAAAAAAAAAAAAAAMDAwIDMzM/8yMjJ/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAMjIyfzMzM/8wMDAgAAAAADAwMCAzMzO/MDAwIAAAAAAyMjJ/MjIyfzIy
        Mn8yMjJ/MjIyfzIyMn8yMjJ/MjIyfzIyMn8yMjJ/MjIyfzAwMCAAAAAAAAAAAAAAAAAwMDAgMzMz/zIy
        Mn8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyMjJ/MzMz/zAwMCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAw
        MCAzMzP/MjIyfwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIyMn8zMzP/MDAwIAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAMDAwIDMzM/8yMjJ/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjIyfzMzM/8wMDAgAAAAAAAA
        AAAwMDAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAwMDAgMzMz/zIyMn8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyMjJ/MzMz/zAw
        MCAAAAAAMjIyYDMzM/80NDRAMDAwIDMzM98zMzPfMzMz3zMzM98zMzPfMzMz3zMzM98zMzPfMzMz3zMz
        M98zMzPfMDAwIAAAAAAAAAAAAAAAADAwMCAzMzP/MjIyfwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIy
        Mn8zMzP/MDAwIAAAAAAwMDAgMjIyfzAwMCAAAAAANDQ0QDQ0NEA0NDRANDQ0QDQ0NEA0NDRANDQ0QDQ0
        NEA0NDRANDQ0QDQ0NEAwMDAgAAAAAAAAAAAAAAAAMDAwIDMzM/8yMjJ/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAMjIyfzMzM/8wMDAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAgMzMz/zIyMn8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAyMjJ/MzMz/zAwMCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMCAzMzP/MjIyfwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADIyMn8zMzP/MDAwIAAAAAAwMDAgMjIyYAAAAAAAAAAAMDAwIDAw
        MCAwMDAgMDAwIDAwMCAwMDAgMDAwIDAwMCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwIDMz
        M/8yMjJ/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjIyfzMzM/8wMDAgAAAAADIyMmAzMzP/MjIyYDAw
        MCAzMzP/MzMz/zMzM/8zMzP/MzMz/zMzM/8zMzP/MzMz/zIyMmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAwMDAgMzMz/zIyMn8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyMjJ/MzMz/zAwMCAAAAAAAAAAADQ0
        NEAwMDAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADAwMCAzMzP/MjIyfwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIyMn8zMzP/MDAwIAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAMDAwIDMzM/8yMjJ/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjIyfzMz
        M/8wMDAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAgMzMz/zIyMn8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAyMjJ/MzMz/zAwMCAAAAAAMDAwIDMzM58AAAAAAAAAADIyMmAyMjJgMjIyYDIyMmAyMjJgNDQ0QAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMCAzMzP/MjIyfwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADIyMn8zMzP/MDAwIAAAAAAyMjJ/MzMz/zAwMCAwMDAgMzMzvzMzM78zMzO/MzMzvzMz
        M78yMjJ/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwIDMzM/8yMjJ/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAMjIyfzMzM/8wMDAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAgMzMz/zIy
        Mn8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyMjJ/MzMz/zAwMCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAw
        MCAzMzP/MjIyfwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIyMn8zMzP/MDAwIAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAMDAwIDMzM/8yMjJ/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjIyfzMzM/8wMDAgAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAwMDAgMzMz/zIyMn8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyMjJgMzMz/zIy
        MmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADQ0NEAzMzP/NDQ0QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAzMzP/MzMzvwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAgMzMzvzMzM98AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADQ0NEAzMzP/MzMz3zIyMn8yMjJgMjIyYDIyMmAyMjJgMjIyYDIyMmAyMjJgMjIyYDIy
        MmAyMjJgMjIyYDIyMmAyMjJgMjIyYDIyMmAyMjJgMjIyYDMzM98zMzP/MjIyYAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADQ0NEAzMzP/MzMz/zMzM/8zMzP/MzMz/zMzM/8zMzP/MzMz/zMz
        M/8zMzP/MzMz/zMzM/8zMzP/MzMz/zMzM/8zMzP/MzMz/zMzM/8zMzP/MzMz3zIyMmAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAgNDQ0QDQ0NEA0NDRANDQ0QDQ0
        NEA0NDRANDQ0QDQ0NEA0NDRANDQ0QDQ0NEA0NDRANDQ0QDQ0NEA0NDRANDQ0QAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/gAA//gAAB/wAAAP4///j+P//8fj///H4///x+IAAcfiIAHH4///x+P/
        /8fjf//H4gABx+IgAcfj///H4///x+JgH8fiAA/H4z//x+P//8fj///H4mB/x+IAf8fj///H4///x+P/
        /8fj///H4///x/P//4/wAAAP+AAAH/4AAP8=
</value>
  </data>
</root>